/*
 * Note that this function uses *synchronous* JavaScript
 * There is a 2-second (2000 milliseconds) timer after which the JSON will be downloaded
 * so if the API calls are not finished by then, the JSON will only have the ones that did finish.
 * You can increase the timer if you need to.
 */

// load a default library that lets us read/write to the file system
var fs = require('fs')
// load a default library that lets us make HTTP requests (like calls to an API)
var request = require('request')

// endpoint URL
const url = 'https://collectionapi.metmuseum.org/public/collection/v1/objects'

// object Ids I want to download
const myObjectIds = [336331, 646997, 11305, 10585, 766447, 766411, 11900, 16577, 16653, 366205, 368447, 389363, 359382, 382342, 339801, 339760, 339844, 333877, 364364, 347656, 363008, 459569, 367589, 345804, 355546, 811890, 372544, 335650, 340750, 339000, 356530, 45323, 78576, 78646, 78645, 57755, 78765, 78749, 78730, 45324, 58813, 57649, 349861, 665407, 354360, 45278, 57675, 78670, 670977, 53408, 439344, 50897, 38344, 435773, 45640, 57204, 54631, 77179, 45754, 45791, 42716, 437326, 36029, 11979, 40516, 815478, 77198, 788905, 50360, 55299, 37863, 65574, 44638, 73161, 53448, 441769, 45618, 11981, 11136, 36084, 42342, 45648, 45419, 54709, 54672, 437349, 436632, 437979, 436423, 73192, 441234, 815476, 39487, 435600, 45245, 36022, 435747, 74741, 36037, 438954, 45361, 36055, 441379, 437190, 439343, 435713, 53172, 436575, 37899, 36451, 53427, 436892, 441357, 10455, 11127, 45760, 49011, 44573, 51685, 40092, 435809, 74994, 74648, 490131, 37993, 49067, 49254, 437423, 437508, 40423, 36131, 436282, 435997, 679188, 49475, 45616, 671053, 45635, 41468, 39901, 53246, 78188, 754545, 41191, 49183, 49010, 53684, 44854, 37395, 51855, 51548, 752036, 36130, 39654, 53409, 52987, 53226, 39540, 437926, 39569, 48969, 53463, 53012, 62953, 435817, 65392, 65620, 50486, 36432, 51528, 53186, 436022, 769294, 39548, 39557, 39545, 53892, 41476, 36436, 53205, 49158, 39482, 733847, 77870, 49187, 437203, 435900, 189712, 237840, 45752, 40057, 40511, 437980, 263204, 262301, 263167, 263157, 268948, 717463, 813902, 786294, 786301, 286874, 285458, 786300, 786297, 267137, 717460, 717462, 717459, 821156, 786320, 786307, 786295, 284701, 266982, 270389, 285466, 786870, 286163, 786308, 286974, 283180, 813899, 786299, 786309, 268650, 283255, 49927, 395429, 393543, 393278, 359769, 395430, 362753, 395579, 384231, 395578, 56926, 742808, 57066, 73476, 54896, 45293, 818471, 45050, 55095, 55812, 56886, 55122, 37273, 369539, 45294, 369541, 36742, 56519, 57058, 56903, 55787, 56898, 57068, 383217, 73623, 55792, 54923, 37274, 54544, 56591, 55767, 428012, 36527, 428044, 37086, 54226, 389684, 49934, 53682, 44980, 359076, 54054, 57055, 56684, 56175, 55076, 53449, 55402, 56137, 55463, 44981, 426347, 639384, 380481, 56977, 36572, 36526, 37092, 37084, 55997, 55803, 55999, 58219, 58263, 45029, 58198, 56838, 57039, 56931, 45301, 56921, 55506, 55363, 55609, 55113, 55492, 73579, 54531, 387459, 365907, 369253, 365180, 369083, 650772, 371574, 336853, 362467, 362646, 362470, 422015, 359883, 384916, 662059, 683208, 662124, 733890, 383021, 692267, 376106, 337066, 382949, 364576, 55442, 53710, 368896, 786216, 55086, 371350, 811949, 428372, 56798, 823859, 356740, 36515, 396044, 45016, 45261, 37129, 36545, 642913, 57098, 45075, 56138, 399032, 697996, 811190, 426344, 368136, 811200, 49936, 49938, 49940, 49939, 49935, 360380, 788986, 49941, 49937, 55063, 422768, 377346, 37275, 54723, 336133, 360270, 57105, 416805, 56680, 56419, 360268, 48923, 53241, 671024, 45080, 45262, 45745, 44696, 40006, 53439, 74363, 53009, 40022, 44896, 44899, 671028, 53240, 53013, 45072,];
// set up empty Array for us to save results to;
const myArray = []

function fetchUrl(objectId){
    request(url + '/' + objectId, function (error, response, body) {
      console.error('error:', error); // Print the error if one occurred
      console.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received

      let obj = JSON.parse(body);

      console.log(obj.primaryImage);
      let index = myArray.length;
      myArray[index] = {};
      myArray[index]["objectID"] = obj.objectID;
      myArray[index]["title"] = obj.title;
      myArray[index]["date"] = obj.objectBeginDate;
     myArray[index]["artist"] = obj.artistDisplayName;
      myArray[index]["primaryImage"] = obj.primaryImage;
      myArray[index]["filename"] = obj.primaryImage.split('/').pop();
    });
}

// call the function for each element in the myObjectIds array
myObjectIds.forEach(objectId => {
    fetchUrl(objectId)
})

// the function inside the setTimeout saves myResults to a JSON
// it will automatically run after 2000 ms
setTimeout(() => {
    fs.writeFileSync('./data.json', JSON.stringify(myArray), 'utf8');
}, 64000);
